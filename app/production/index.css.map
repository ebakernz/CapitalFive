{"version":3,"sources":["webpack:///./app/scss/app/scss/index.scss","webpack:///./app/scss/index.scss","webpack:///./app/scss/app/scss/global/_reset.scss","webpack:///./app/scss/app/scss/global/_variables.scss","webpack:///./app/scss/app/scss/global/_mixins.scss","webpack:///./app/scss/app/scss/global/_layout.scss","webpack:///./app/scss/app/scss/global/_typography.scss","webpack:///./app/scss/app/scss/global/_forms.scss","webpack:///./app/scss/app/scss/global/_tables.scss","webpack:///./app/scss/app/scss/components/_header.scss","webpack:///./app/scss/app/scss/components/_footer.scss","webpack:///./app/scss/app/scss/components/_menu.scss","webpack:///./app/scss/app/scss/components/_banner.scss","webpack:///./app/scss/app/scss/pages/_security.scss"],"names":[],"mappings":"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","file":"index.css","sourcesContent":["/**\r\n * Global\r\n *\r\n * Styles and mixins that are used throughout the website. Keep things logically\r\n * separated into concern-based filenames (ie typography, forms, etc).\r\n * The order of these includes is important.\r\n **/\r\n@import 'global/reset';\r\n@import 'global/variables';\r\n@import 'global/mixins';\r\n@import 'global/layout';\r\n@import 'global/typography';\r\n@import 'global/forms';\r\n@import 'global/tables';\r\n\r\n\r\n\r\n/**\r\n * Self-contained components\r\n *\r\n * Any significant component that is reused throughout the site. Typically these would have\r\n * a matching template (ie Includes/{COMPONENT_NAME}), and js (ie js/{COMPONENT_NAME}).\r\n **/\r\n@import 'components/header';\r\n@import 'components/footer';\r\n@import 'components/menu';\r\n@import 'components/banner';\r\n\r\n\r\n\r\n/**\r\n * Page-specific\r\n *\r\n * These should match the class of said page (ie HomePage = homepage, Contact = contact)\r\n **/\r\n@import 'pages/homepage';\r\n@import 'pages/security';\r\n","/**\r\n * Global\r\n *\r\n * Styles and mixins that are used throughout the website. Keep things logically\r\n * separated into concern-based filenames (ie typography, forms, etc).\r\n * The order of these includes is important.\r\n **/\n* {\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\n/* Fonts */\n/* Breakpoints */\n/**\r\n * Colours\r\n **/\n/**\r\n * Map names to colours\r\n * @type {[type]}\r\n */\n.black-text {\n  color: #000000 !important; }\n\n.black-bg {\n  background-color: #000000 !important; }\n  .black-bg.semi-trans {\n    background-color: rgba(0, 0, 0, 0.95) !important; }\n  .black-bg .darken {\n    background-color: black !important; }\n\n.white-text {\n  color: #FFFFFF !important; }\n\n.white-bg {\n  background-color: #FFFFFF !important; }\n  .white-bg.semi-trans {\n    background-color: rgba(255, 255, 255, 0.95) !important; }\n  .white-bg .darken {\n    background-color: #f2f2f2 !important; }\n\n.grey-text {\n  color: #BBBBBB !important; }\n\n.grey-bg {\n  background-color: #BBBBBB !important; }\n  .grey-bg.semi-trans {\n    background-color: rgba(187, 187, 187, 0.95) !important; }\n  .grey-bg .darken {\n    background-color: #aeaeae !important; }\n\n.light_grey-text {\n  color: #EEEEEE !important; }\n\n.light_grey-bg {\n  background-color: #EEEEEE !important; }\n  .light_grey-bg.semi-trans {\n    background-color: rgba(238, 238, 238, 0.95) !important; }\n  .light_grey-bg .darken {\n    background-color: #e1e1e1 !important; }\n\n/**\r\n * Retrieve colour from $colours map\r\n * @param  {string} $key [name of colour, as defined in $colours map]\r\n * @return hex colour\r\n */\n/**\r\n * [Subtracts the border and padding from the width of the element.]\r\n */\n/**\r\n * [scale description]\r\n * @param  {[int]} $zoom [The level of zoom you want on the element. eg: '1.1'.]\r\n */\n/**\r\n * [Pass the angle you want the element to rotate. eg: 90deg. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\n/**\r\n * [Rotate and vertically align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\n/**\r\n * [Rotate and horizontally align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\n/**\r\n * [Vertically align element within a relatively positioned element.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will vertically center align the element.]\r\n */\n/**\r\n * [Horizontally align element within a relatively positioned element.]\r\n * @param  {[percentage]} $leftPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n */\n/**\r\n * [Horizontally and vertically align element within a relatively positioned element.]\r\n * @param  {[percentage]} $leftPos [Pass the horizontally position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n */\n/**\r\n * [transition description]\r\n * @param  {[style]} $propertie [The style you want to animate. Defaults to 'all'.]\r\n * @param  {[int in seconds]} $time      [The speed at which you want the transition to take. Defaults to '0.3s'.]\r\n * @param  {[movement type]} $mode      [The type of movement you want eg: linear, ease, ease-in, ease-out. Defaults to 'linear'.]\r\n */\n/**\r\n * Grid panels\r\n * Creates a grid of items that have a fixed height\r\n * @param $cols int = number of items per row\r\n * @param $col_gap percent = gap between items in each row (optional, defaults to 2%)\r\n * @param $row_gap percent = gap between row (optional, defaults to two times col_gap (4%))\r\n **/\n/**\r\n * Ease between states\r\n * Use this to smooth hover/active/focus events\r\n **/\n/**\r\n * Clearfix\r\n **/\n/**\r\n * Multi-column\r\n * @param $cols int = number of columns to span\r\n * @param $sum int = total number of columns\r\n * @param $gap mixed = gap between items (optional, defaults to 1rem)\r\n **/\n.inner {\n  max-width: 1450px;\n  margin: 0 auto; }\n\n.cf::after {\n  content: '';\n  clear: both;\n  display: block; }\n\n/* \nIn conjunction with video embed fix /app/js/components/content-video-embeds.js\n*/\n.ss-htmleditorfield-file.embed {\n  width: 0;\n  height: 0; }\n  .ss-htmleditorfield-file.embed.leftAlone {\n    float: left; }\n  .ss-htmleditorfield-file.embed.rightAlone {\n    float: right; }\n  .ss-htmleditorfield-file.embed.center {\n    display: block;\n    float: none;\n    margin: 0 auto; }\n  .ss-htmleditorfield-file.embed.left {\n    float: left;\n    padding-right: 0.5em; }\n  .ss-htmleditorfield-file.embed.right {\n    float: right;\n    padding-left: 0.5em; }\n\n/* \nIn conjunction with image alignment fix /app/js/components/content-image-alignment.js\n*/\n.captionImage,\n.ss-htmleditorfield-file.image {\n  max-width: 100%;\n  height: auto; }\n  .captionImage.leftAlone,\n  .ss-htmleditorfield-file.image.leftAlone {\n    float: left; }\n  .captionImage.rightAlone,\n  .ss-htmleditorfield-file.image.rightAlone {\n    float: right; }\n  .captionImage.center,\n  .ss-htmleditorfield-file.image.center {\n    display: block;\n    float: none;\n    margin: 0 auto; }\n  .captionImage.left,\n  .ss-htmleditorfield-file.image.left {\n    float: left;\n    padding-right: 0.5em; }\n  .captionImage.right,\n  .ss-htmleditorfield-file.image.right {\n    float: right;\n    padding-left: 0.5em; }\n\n/**\n * Global typographic styles\n *\n * All typography formatting and general font settings\n * belong in this file. For unique blocks and widgets, etc\n * you should put those in their own component file\n **/\nbody,\nhtml {\n  font-family: \"Arial\", sans-serif;\n  font-size: 16px; }\n\nh1 {\n  font-size: 3rem; }\n\nh2 {\n  font-size: 2.2rem; }\n\nh3 {\n  font-size: 1.8rem; }\n\nh4 {\n  font-size: 1.4rem; }\n\nh5 {\n  font-size: 1rem; }\n\np {\n  margin: 0.4rem 0; }\n\nul,\nol {\n  padding-left: 24px; }\n  ul li,\n  ol li {\n    padding: 0.2em 0; }\n\na {\n  -webkit-transition: all 0.2s ease-in-out;\n  -moz-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out; }\n\n.text-left {\n  text-align: left; }\n\n.text-right {\n  text-align: right; }\n\n.text-center {\n  text-align: center; }\n\n.text-justify {\n  text-align: justify; }\n\ninput,\nselect,\ntextarea,\noption,\nbutton {\n  font-family: \"Arial\";\n  font-size: 1rem;\n  padding: 10px 16px;\n  box-sizing: border-box;\n  border: 1px solid #BBBBBB;\n  width: 100%; }\n  input:focus, input:active,\n  select:focus,\n  select:active,\n  textarea:focus,\n  textarea:active,\n  option:focus,\n  option:active,\n  button:focus,\n  button:active {\n    border-color: #000000; }\n\n.field {\n  padding-bottom: 15px; }\n  .field label {\n    display: block;\n    padding-bottom: 4px; }\n\ninput[type=\"submit\"] {\n  background: #BBBBBB;\n  color: #FFFFFF;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 1rem;\n  font-weight: 700;\n  border: 0;\n  width: auto;\n  padding: 10px 30px; }\n  input[type=\"submit\"]:hover {\n    background: #a2a2a2; }\n\n/**\n * Removes iOS default styling\n * \n * Targets all necessary inputs and removes the blue underline for phone numbers\n **/\nbutton,\ntextarea,\ninput.text,\ninput[type=\"text\"],\ninput[type=\"button\"],\ninput[type=\"submit\"],\n.input-checkbox {\n  -webkit-appearance: none;\n  border-radius: 0; }\n\na[href^=\"tel\"] {\n  color: inherit;\n  text-decoration: none; }\n\n::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.25); }\n\n:-moz-placeholder {\n  color: rgba(0, 0, 0, 0.25); }\n\n::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.25); }\n\n:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.25); }\n\ntable {\n  margin: 10px 0;\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: collapse; }\n  table tr {\n    border-bottom: 1px solid #BBBBBB; }\n    table tr th,\n    table tr td {\n      text-align: left;\n      padding: 4px 8px;\n      vertical-align: top; }\n      table tr th:not(:first-child),\n      table tr td:not(:first-child) {\n        border-left: 1px solid #BBBBBB; }\n    table tr th {\n      font-weight: 600;\n      background: #EEEEEE;\n      vertical-align: bottom; }\n\n/**\r\n * Self-contained components\r\n *\r\n * Any significant component that is reused throughout the site. Typically these would have\r\n * a matching template (ie Includes/{COMPONENT_NAME}), and js (ie js/{COMPONENT_NAME}).\r\n **/\nheader.page-header .branding {\n  text-decoration: none; }\n  header.page-header .branding img {\n    max-width: 100%; }\n\nfooter.page-footer {\n  padding: 2em 0;\n  margin-top: 2em;\n  border-top: 1px solid #EEEEEE; }\n\n.menu__item {\n  display: block;\n  position: relative; }\n  .menu__item--current > .menu__item__link {\n    font-weight: 600; }\n  .menu__item--expanded > .menu__submenu {\n    display: block; }\n  .menu__item__link {\n    text-decoration: none; }\n\n.menu__submenu {\n  margin-left: 15px;\n  display: none; }\n\n.page-banner {\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: 50% 25%;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover; }\n  .page-banner h1 {\n    color: #FFFFFF; }\n  .page-banner p {\n    color: #FFFFFF; }\n  .page-banner--no-image {\n    background: #BBBBBB; }\n  .page-banner__inner {\n    padding: 30px 5%;\n    min-height: 150px; }\n\n/**\r\n * Page-specific\r\n *\r\n * These should match the class of said page (ie HomePage = homepage, Contact = contact)\r\n **/\n.Security ul {\n  display: none; }\n\n.Security form {\n  margin: 0 auto;\n  /* align checkbox with label for 'remember me' */ }\n  .Security form input.checkbox {\n    width: inherit;\n    float: left;\n    margin: 3px 10px 0 0; }\n  .Security form #ForgotPassword {\n    display: inline-block; }\n    .Security form #ForgotPassword a {\n      display: inline-block;\n      background: #BBBBBB;\n      color: #FFFFFF;\n      cursor: hand;\n      cursor: pointer;\n      text-decoration: none;\n      font-size: 12px;\n      font-weight: 700;\n      text-transform: uppercase;\n      padding: 10px 16px;\n      box-sizing: border-box;\n      border: 0; }\n      .Security form #ForgotPassword a:hover {\n        background: #a2a2a2; }\n","\n* {\n\tborder: 0;\n\tmargin: 0;\n\tpadding: 0;\n}","/* Fonts */\r\n\r\n$baseFont: 'Arial';\r\n$headingFont: 'Times New Roman';\r\n\r\n\r\n/* Breakpoints */\r\n$base: 0em;\r\n$xxs: 330px;\r\n$xs: 460px;\r\n$sm:  568px;\r\n$md: 680px;\r\n$xmd: 880px;\r\n$lg:  1024px;\r\n$xl: 1170px;\r\n$xxl: 1500px;\r\n\r\n\r\n/**\r\n * Colours\r\n **/\r\n\r\n/**\r\n * Map names to colours\r\n * @type {[type]}\r\n */\r\n$colours: (\r\n\tblack: #000000,\r\n\twhite: #FFFFFF,\r\n\tgrey: #BBBBBB,\r\n\tlight_grey: #EEEEEE\r\n);\r\n\r\n// Loop each member of $map as key ($class) and val ($colour)\r\n@each $class, $colour in $colours {\r\n\t\r\n\t// appy color attr to -text classes\r\n\t&.#{$class}-text {\r\n\t\tcolor: $colour !important;\r\n\t}\r\n\r\n\t// appy background-color attr to -bg classes\r\n\t&.#{$class}-bg {\r\n\t\tbackground-color: $colour !important;\r\n\r\n\t\t&.semi-trans {\r\n\t\t\tbackground-color: rgba($colour, 0.95) !important;\r\n\t\t}\r\n\r\n\t    .darken {\r\n\t\t\tbackground-color: darken($colour, 5%) !important;\r\n\t    }\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * Retrieve colour from $colours map\r\n * @param  {string} $key [name of colour, as defined in $colours map]\r\n * @return hex colour\r\n */\r\n@function colour($key) {\r\n\t@if map-has-key($colours, $key) {\r\n\t\t@return map-get($colours, $key);\r\n\t}\r\n\r\n\t@warn \"Unknown `#{$key}` in $colours.\";\r\n\t@return null;\r\n}\r\n","/**\r\n * [Subtracts the border and padding from the width of the element.]\r\n */\r\n@mixin borderBox{\r\n\t-webkit-box-sizing: border-box;\r\n\t-moz-box-sizing: border-box;\r\n\t-ms-box-sizing: border-box;\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n\r\n/**\r\n * [scale description]\r\n * @param  {[int]} $zoom [The level of zoom you want on the element. eg: '1.1'.]\r\n */\r\n@mixin scale($zoom){\r\n\t-webkit-transform: scale($zoom);\r\n\t-moz-transform: scale($zoom);\r\n\t-ms-transform: scale($zoom);\r\n\t-o-transform: scale($zoom);\r\n\ttransform: scale($zoom);\r\n}\r\n\r\n\r\n/**\r\n * [Pass the angle you want the element to rotate. eg: 90deg. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\r\n@mixin rotate($deg){\r\n\t-webkit-transform: rotate($deg);\r\n\t-moz-transform: rotate($deg);\r\n\t-o-transform: rotate($deg);\r\n\t-ms-transform: rotate($deg);\r\n\ttransform: rotate($deg);\r\n}\r\n\r\n\r\n\r\n/**\r\n * [Rotate and vertically align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\r\n@mixin rotateVerticalAlign($topPos, $deg){\r\n\ttop: $topPos;\r\n\t-webkit-transform: translateY(-$topPos) rotate($deg);\r\n\t-moz-transform: translateY(-$topPos) rotate($deg);\r\n\t-ms-transform: translateY(-$topPos) rotate($deg);\r\n\t-o-transform: translateY(-$topPos) rotate($deg);\r\n\ttransform: translateY(-$topPos) rotate($deg);\r\n}\r\n\r\n\r\n/**\r\n * [Rotate and horizontally align element within a relatively positioned element. NOTE: You need to add 'deg' to the angle. eg: 90deg.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[int with 'deg' appended]} $deg [The angle of the rotation]\r\n */\r\n@mixin rotateHorizontallyAlign($leftPos, $deg){\r\n\tleft: $leftPos;\r\n\t-webkit-transform: translateY(-$leftPos) rotate($deg);\r\n\t-moz-transform: translateY(-$leftPos) rotate($deg);\r\n\t-ms-transform: translateY(-$leftPos) rotate($deg);\r\n\t-o-transform: translateY(-$leftPos) rotate($deg);\r\n\ttransform: translateY(-$leftPos) rotate($deg);\r\n}\r\n\r\n\r\n/**\r\n * [Vertically align element within a relatively positioned element.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will vertically center align the element.]\r\n */\r\n@mixin verticalAlign($topPos){\r\n\ttop: $topPos;\r\n\t-webkit-transform: translateY(-$topPos);\r\n\t-moz-transform: translateY(-$topPos);\r\n\t-ms-transform: translateY(-$topPos);\r\n\t-o-transform: translateY(-$topPos);\r\n\ttransform: translateY(-$topPos);\r\n}\r\n\r\n/**\r\n * [Horizontally align element within a relatively positioned element.]\r\n * @param  {[percentage]} $leftPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n */\r\n@mixin horizontalAlign($leftPos){\r\n\tleft: $leftPos;\r\n\t-webkit-transform: translateX(-$leftPos);\r\n\t-moz-transform: translateX(-$leftPos);\r\n\t-ms-transform: translateX(-$leftPos);\r\n\t-o-transform: translateX(-$leftPos);\r\n\ttransform: translateX(-$leftPos);\r\n}\r\n\r\n/**\r\n * [Horizontally and vertically align element within a relatively positioned element.]\r\n * @param  {[percentage]} $leftPos [Pass the horizontally position as a percetage. eg 50% will horizontally center align the element.]\r\n * @param  {[percentage]} $topPos [Pass the vertical position as a percetage. eg 50% will horizontally center align the element.]\r\n */\r\n@mixin verticalHorizontalAlign($leftPos, $topPos){\r\n\tleft: $leftPos;\r\n\ttop: $topPos;\r\n\t-webkit-transform: translate(-$leftPos, -$topPos);\r\n\t-moz-transform: translate(-$leftPos, -$topPos);\r\n\t-ms-transform: translate(-$leftPos, -$topPos);\r\n\t-o-transform: translate(-$leftPos, -$topPos);\r\n\ttransform: translate(-$leftPos, -$topPos);\r\n}\r\n\r\n/**\r\n * [transition description]\r\n * @param  {[style]} $propertie [The style you want to animate. Defaults to 'all'.]\r\n * @param  {[int in seconds]} $time      [The speed at which you want the transition to take. Defaults to '0.3s'.]\r\n * @param  {[movement type]} $mode      [The type of movement you want eg: linear, ease, ease-in, ease-out. Defaults to 'linear'.]\r\n */\r\n@mixin transition($property: all, $time: 0.3s, $mode: linear){\r\n\t-webkit-transition: $property $time $mode;\r\n\t-moz-transition: $property $time $mode;\r\n\t-o-transition: $property $time $mode;\r\n\ttransition: $property $time $mode;\r\n}\r\n\r\n//\tBackground image - no repeat, centered, cover\r\n@mixin optimiseBgImg($position: center center, $size: cover) {\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: $position;\r\n\t-webkit-background-size: $size;\r\n\t-moz-background-size: $size;\r\n\t-o-background-size: $size;\r\n\tbackground-size: $size;\r\n}\r\n\r\n//\tCenter item horizontally and vertically\r\n// \tmake parent item position relative\r\n@mixin centerPositioning() {\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tmargin: auto;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Grid panels\r\n * Creates a grid of items that have a fixed height\r\n * @param $cols int = number of items per row\r\n * @param $col_gap percent = gap between items in each row (optional, defaults to 2%)\r\n * @param $row_gap percent = gap between row (optional, defaults to two times col_gap (4%))\r\n **/\r\n@mixin grid( $cols, $col_gap: 2%, $row_gap: false ){\r\n\r\n\t@if $row_gap == false{\r\n\t\t$row_gap: $col_gap * 2;\r\n\t}\r\n\r\n\twidth: ( 0% + ( 100 / $cols ) - ( $col_gap * 2 ) + ( ( $col_gap * 2 ) / $cols ) );\r\n\tbox-sizing: border-box;\r\n\r\n\tmargin: 0 $col_gap;\r\n\r\n\t// reset previously defined margins (at higher breakpoints)\r\n\t&:nth-of-type(n),\r\n\t&:nth-of-type(1n+1) {\r\n\t\tmargin: $row_gap $col_gap 0;\r\n\t\tclear: none;\r\n\t}\r\n\r\n\t// first of row\r\n\t&:nth-of-type(#{$cols}n+1) {\r\n\t\t// margin-top: $row_gap;\r\n\t\tmargin-left: 0;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\t// handle first of row if there are less than $col\r\n\t&:first-of-type {\r\n\t\tmargin-top: 0;\r\n\t\tmargin-left: 0;\r\n\t}\r\n\r\n\t@for $i from 1 through $cols{\r\n\t\t&:nth-of-type(#{$i}){\r\n\t\t \tmargin-top: 0;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// last of row\r\n\t&:nth-of-type(#{$cols}n) {\r\n\t\tmargin-right: 0;\r\n\t\tposition: relative;\r\n\t\t&:after{\r\n\t\t\tclear: both;\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove unneeded margin-bottom from the last item.\r\n\t&:last-of-type {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Ease between states\r\n * Use this to smooth hover/active/focus events\r\n **/\r\n@mixin animate( $duration: 0.2s, $easing: ease-in-out ){\r\n\t-webkit-transition: all $duration $easing;\r\n\t   -moz-transition: all $duration $easing;\r\n\t\t -o-transition: all $duration $easing;\r\n\t\t    transition: all $duration $easing;\r\n}\r\n\r\n\r\n/**\r\n * Clearfix\r\n **/\r\n@mixin clearfix(){\r\n\t&::after {\r\n\t\tcontent: '';\r\n\t\tclear: both;\r\n\t\tdisplay: block;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Multi-column\r\n * @param $cols int = number of columns to span\r\n * @param $sum int = total number of columns\r\n * @param $gap mixed = gap between items (optional, defaults to 1rem)\r\n **/\r\n@mixin col($cols, $sum, $gap: 1rem){\r\n\twidth: percentage($cols/$sum);\r\n\tdisplay: block;\r\n\tfloat: left;\r\n\tbox-sizing: border-box;\r\n\tpadding: 0 $gap;\r\n\r\n\t&:first-of-type {\r\n\t\tpadding-left: 0;\r\n\t}\r\n\r\n\t&:last-of-type {\r\n\t\tpadding-right: 0;\r\n\t}\r\n}\r\n","\n.inner {\n\tmax-width: 1450px;\n\tmargin: 0 auto;\n}\n\n.cf {\n\t@include clearfix();\n}\n\n\n/* \nIn conjunction with video embed fix /app/js/components/content-video-embeds.js\n*/\n.ss-htmleditorfield-file.embed {\n\twidth: 0;\n\theight: 0;\n\n\t&.leftAlone {\n\t\tfloat: left;\n\t}\n\t&.rightAlone {\n\t\tfloat: right;\n\t}\n\t&.center {\n\t\tdisplay: block;\n\t\tfloat: none;\n\t\tmargin: 0 auto;\n\t}\n\t&.left {\n\t\tfloat: left;\n\t\tpadding-right: 0.5em;\n\t}\n\t&.right {\n\t\tfloat: right;\n\t\tpadding-left: 0.5em;\n\t}\n}\n\n/* \nIn conjunction with image alignment fix /app/js/components/content-image-alignment.js\n*/\n.captionImage, \n.ss-htmleditorfield-file.image {\n\tmax-width: 100%;\n\theight: auto;\n\n\t&.leftAlone {\n\t\tfloat: left;\n\t}\n\t&.rightAlone {\n\t\tfloat: right;\n\t}\n\t&.center {\n\t\tdisplay: block;\n\t\tfloat: none;\n\t\tmargin: 0 auto;\n\t}\n\t&.left {\n\t\tfloat: left;\n\t\tpadding-right: 0.5em;\n\t}\n\t&.right {\n\t\tfloat: right;\n\t\tpadding-left: 0.5em;\n\t}\n}","\n/**\n * Global typographic styles\n *\n * All typography formatting and general font settings\n * belong in this file. For unique blocks and widgets, etc\n * you should put those in their own component file\n **/\n\nbody,\nhtml {\n\tfont-family: $baseFont, sans-serif;\n\tfont-size: 16px;\n}\n\nh1 {\n\tfont-size: 3rem;\n}\n\nh2 {\n\tfont-size: 2.2rem;\n}\n\nh3 {\n\tfont-size: 1.8rem;\n}\n\nh4 {\n\tfont-size: 1.4rem;\n}\n\nh5 {\n\tfont-size: 1rem;\n}\n\np {\n\tmargin: 0.4rem 0;\n}\n\nul,\nol {\n\tpadding-left: 24px;\n\n    li {\n    \tpadding: 0.2em 0;\n    }\n}\n\na {\n\t@include animate()\n}\n\n.text-left {\n    text-align: left;\n}\n.text-right {\n    text-align: right;\n}\n.text-center {\n    text-align: center;\n}\n.text-justify {\n    text-align: justify;\n}","\ninput,\nselect,\ntextarea,\noption,\nbutton {\n\tfont-family: $baseFont;\n\tfont-size: 1rem;\n\tpadding: 10px 16px;\n\tbox-sizing: border-box;\n\tborder: 1px solid colour(grey);\n\twidth: 100%;\n\n\t&:focus,\n\t&:active {\n\t\tborder-color: colour(black);\n\t}\n}\n\n.field {\n\tpadding-bottom: 15px;\n\n\tlabel {\n\t\tdisplay: block;\n\t\tpadding-bottom: 4px;\n\t}\n}\n\ninput[type=\"submit\"] {\n\tbackground: colour(grey);\n\tcolor: colour(white);\n\tcursor: pointer;\n\ttext-decoration: none;\n\tfont-size: 1rem;\n\tfont-weight: 700;\n\tborder: 0;\n\twidth: auto;\n\tpadding: 10px 30px;\n\n\t&:hover{\n\t\tbackground: darken(colour(grey), 10%);\n\t}\n}\n\n/**\n * Removes iOS default styling\n * \n * Targets all necessary inputs and removes the blue underline for phone numbers\n **/\nbutton,\ntextarea,\ninput.text,\ninput[type=\"text\"],\ninput[type=\"button\"],\ninput[type=\"submit\"],\n.input-checkbox {\n-webkit-appearance: none;\nborder-radius: 0;\n}\na[href^=\"tel\"] {\n\tcolor: inherit;\n\ttext-decoration: none;\n}\n\n::-webkit-input-placeholder {\tcolor: rgba(0,0,0,0.25); }\n:-moz-placeholder {\t\t\t\tcolor: rgba(0,0,0,0.25); }\n::-moz-placeholder {\t\t\tcolor: rgba(0,0,0,0.25); }\n:-ms-input-placeholder {\t\tcolor: rgba(0,0,0,0.25); }","\r\ntable {\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n\r\n    tr {\r\n        border-bottom: 1px solid colour(grey);\r\n\r\n        th,\r\n        td {\r\n            text-align: left;\r\n            padding: 4px 8px;\r\n            vertical-align: top;\r\n\r\n            &:not(:first-child){\r\n                border-left: 1px solid colour(grey);\r\n            }\r\n        }\r\n\r\n        th {\r\n            font-weight: 600;\r\n            background: colour(light_grey);\r\n            vertical-align: bottom;\r\n        }\r\n    }\r\n}\r\n","header.page-header {\r\n\r\n    .branding {\r\n        text-decoration: none;\r\n\r\n        img {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n}","footer {\r\n\r\n    &.page-footer {\r\n        padding: 2em 0;\r\n        margin-top: 2em;\r\n        border-top: 1px solid colour(light_grey);\r\n    }\r\n}","\r\n$menu: 'menu';\r\n\r\n.#{$menu}{\r\n\t&__item {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\r\n        &--current {\r\n            & > .#{$menu}__item__link {\r\n                font-weight: 600;\r\n            }\r\n\t\t}\r\n\r\n        &--expanded {\r\n            & > .#{$menu}__submenu {\r\n                display: block;\r\n            }\r\n        }\r\n\r\n\t\t&__link {\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t}\r\n\r\n    &__submenu {\r\n        margin-left: 15px;\r\n        display: none;\r\n    }\r\n}\r\n",".page-banner {\r\n    width: 100%;\r\n    @include optimiseBgImg($position: 50% 25%);\r\n\r\n    h1 {\r\n        color: colour(white);\r\n    }\r\n\r\n    p {\r\n        color: colour(white);\r\n    }\r\n\r\n    &--no-image {\r\n        background: colour(grey);\r\n    }\r\n\r\n    &__inner {\r\n        padding: 30px 5%;\r\n        min-height: 150px;\r\n    }\r\n}","\r\n.Security {\r\n\r\n    ul {\r\n        display: none;\r\n    }\r\n\r\n    form {\r\n    \tmargin: 0 auto;\r\n\r\n    \t/* align checkbox with label for 'remember me' */\r\n\t\tinput.checkbox {\r\n\t\t\twidth: inherit;\r\n\t\t\tfloat: left;\r\n\t\t\tmargin: 3px 10px 0 0;\r\n\t\t}\r\n\r\n\r\n    \t#ForgotPassword {\r\n    \t\tdisplay: inline-block;\r\n\r\n    \t\ta {\r\n    \t\t\tdisplay: inline-block;\r\n\t\t\t\tbackground: colour(grey);\r\n\t\t\t\tcolor: colour(white);\r\n\t\t\t\tcursor: hand;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\tpadding: 10px 16px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\tborder: 0;\r\n\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tbackground: darken(colour(grey), 10%);\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n}\r\n"],"sourceRoot":""}